#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä coFound
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import time
from datetime import datetime, timedelta

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_URL = "http://62.113.37.96:8000"
# SERVER_URL = "http://localhost:8000"  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

def register_user(email, password, name, phone, position, company_name):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    try:
        response = requests.post(f"{SERVER_URL}/register", json={
            'email': email,
            'password': password,
            'name': name,
            'phone': phone,
            'position': position,
            'company_name': company_name,
        })
        
        if response.status_code == 200:
            return response.json()['user_id']
        else:
            print(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ {email}: {response.text}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ {email}: {e}")
        return None

def create_company(name, description, industry, location, logo_url, employee_count, contact_email, user_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    try:
        response = requests.post(f"{SERVER_URL}/companies", json={
            'name': name,
            'description': description,
            'industry': industry,
            'location': location,
            'logo_url': logo_url,
            'employee_count': employee_count,
            'contact_email': contact_email,
        }, params={'user_id': user_id})
        
        if response.status_code == 200:
            return response.json()['company_id']
        else:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ {name}: {response.text}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ {name}: {e}")
        return None

def create_post(content, company_id, user_id, image_url=None):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    try:
        data = {
            'content': content,
            'company_id': company_id,
        }
        if image_url:
            data['image_url'] = image_url
            
        response = requests.post(f"{SERVER_URL}/posts", json=data, params={'user_id': user_id})
        
        if response.status_code == 200:
            return response.json()['post_id']
        else:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {response.text}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        return None

def create_comment(post_id, content, user_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    try:
        response = requests.post(f"{SERVER_URL}/posts/{post_id}/comments", json={
            'content': content,
        }, params={'user_id': user_id})
        
        if response.status_code == 200:
            return True
        else:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {response.text}")
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
        return False

def setup_test_data():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(f"{SERVER_URL}/users")
        if response.status_code == 200:
            existing_users = response.json()
            if len(existing_users) > 0:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("üë• –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    user1_id = register_user(
        email='ivan@techstart.ru',
        password='test123',
        name='–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        phone='+7 (999) 123-45-67',
        position='CEO',
        company_name='TechStart'
    )
    
    user2_id = register_user(
        email='anna@greeneco.ru',
        password='test123',
        name='–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        phone='+7 (999) 987-65-43',
        position='CTO',
        company_name='GreenEco'
    )
    
    user3_id = register_user(
        email='pavel@eduplatform.ru',
        password='test123',
        name='–ü–∞–≤–µ–ª –ö–æ–∑–ª–æ–≤',
        phone='+7 (999) 555-44-33',
        position='Founder',
        company_name='EduPlatform'
    )
    
    if not all([user1_id, user2_id, user3_id]):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏
    print("üè¢ –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏...")
    
    company1_id = create_company(
        name='TechStart',
        description='–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–∏–Ω—Ç–µ—Ö-–∫–æ–º–ø–∞–Ω–∏—è',
        industry='–§–∏–Ω–∞–Ω—Å—ã',
        location='–ú–æ—Å–∫–≤–∞',
        logo_url='https://via.placeholder.com/100/4CAF50/FFFFFF?text=TS',
        employee_count=50,
        contact_email='info@techstart.ru',
        user_id=user1_id
    )
    
    company2_id = create_company(
        name='GreenEco',
        description='–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
        industry='–≠–∫–æ–ª–æ–≥–∏—è',
        location='–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        logo_url='https://via.placeholder.com/100/4CAF50/FFFFFF?text=GE',
        employee_count=25,
        contact_email='info@greeneco.ru',
        user_id=user2_id
    )
    
    company3_id = create_company(
        name='EduPlatform',
        description='–û–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö',
        industry='–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        location='–ö–∞–∑–∞–Ω—å',
        logo_url='https://via.placeholder.com/100/2196F3/FFFFFF?text=EP',
        employee_count=15,
        contact_email='info@eduplatform.ru',
        user_id=user3_id
    )
    
    if not all([company1_id, company2_id, company3_id]):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–∞–Ω–∏–∏")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã
    print("üìù –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã...")
    
    posts = [
        {
            'content': '–ó–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—ã–π —Ñ–∏–Ω—Ç–µ—Ö-–ø—Ä–æ–¥—É–∫—Ç! –ò—â–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–º–æ–∂–µ—Ç –º–∞–ª–æ–º—É –±–∏–∑–Ω–µ—Å—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.',
            'image_url': 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–§–∏–Ω—Ç–µ—Ö+–ü—Ä–æ–¥—É–∫—Ç',
            'company_id': company1_id,
            'user_id': user1_id
        },
        {
            'content': '–û—Ç–∫—Ä—ã–ª–∏ –Ω–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ.',
            'image_url': 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–¶–µ–Ω—Ç—Ä+–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏',
            'company_id': company2_id,
            'user_id': user2_id
        },
        {
            'content': '–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ Flutter —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Å—Ç–∞–Ω—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
            'image_url': 'https://via.placeholder.com/400x300/2196F3/FFFFFF?text=–ö—É—Ä—Å+Flutter',
            'company_id': company3_id,
            'user_id': user3_id
        },
        {
            'content': '–ü—Ä–æ–≤–µ–ª–∏ —É—Å–ø–µ—à–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ FinTech 2024. –ü–æ–ª—É—á–∏–ª–∏ –º–Ω–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤!',
            'image_url': None,
            'company_id': company1_id,
            'user_id': user1_id
        },
        {
            'content': '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è–ª–∞ —É—á–∞—Å—Ç–∏–µ –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä—É–º–µ. –û–±—Å—É–¥–∏–ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è –∑–µ–ª–µ–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –†–æ—Å—Å–∏–∏.',
            'image_url': 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–≠–∫–æ+–§–æ—Ä—É–º',
            'company_id': company2_id,
            'user_id': user2_id
        }
    ]
    
    post_ids = []
    for post_data in posts:
        post_id = create_post(**post_data)
        if post_id:
            post_ids.append(post_id)
            time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    if not post_ids:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç—ã")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    print("üí¨ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...")
    
    comments = [
        {'post_id': post_ids[0], 'content': '–û—Ç–ª–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞! –ì–æ—Ç–æ–≤—ã –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É.', 'user_id': user2_id},
        {'post_id': post_ids[0], 'content': '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.', 'user_id': user3_id},
        {'post_id': post_ids[1], 'content': '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é! –≠–∫–æ–ª–æ–≥–∏—è - —ç—Ç–æ –≤–∞–∂–Ω–æ.', 'user_id': user1_id},
        {'post_id': post_ids[2], 'content': '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—à—É—Å—å –Ω–∞ –∫—É—Ä—Å!', 'user_id': user1_id},
        {'post_id': post_ids[2], 'content': '–û—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!', 'user_id': user2_id},
    ]
    
    for comment_data in comments:
        create_comment(**comment_data)
        time.sleep(0.3)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ: 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, 3 –∫–æ–º–ø–∞–Ω–∏–∏, {len(post_ids)} –ø–æ—Å—Ç–æ–≤, {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")

if __name__ == "__main__":
    setup_test_data() 