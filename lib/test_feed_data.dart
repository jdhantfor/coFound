import '/models/models.dart';
import '/services/database_helper.dart';
import '/services/post_service.dart';
import '/services/user_service.dart';
import '/services/company_service.dart';
import 'package:dio/dio.dart';

class TestFeedData {
  static final DatabaseHelper _dbHelper = DatabaseHelper();
  static final PostService _postService = PostService();
  static final UserService _userService = UserService();
  static final CompanyService _companyService = CompanyService();
  static final Dio _dio = Dio();
  static const String _baseUrl = 'http://62.113.37.96:8000';

  // ==================== –õ–û–ö–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï ====================

  static Future<void> insertTestData() async {
    try {
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      final user1 = User(
        id: 1,
        email: 'ivan@techstart.ru',
        name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        phone: '+7 (999) 123-45-67',
        position: 'CEO',
        companyName: 'TechStart',
        avatarUrl: 'assets/avatar_ivan.svg',
        createdAt: DateTime.now().subtract(const Duration(days: 30)),
      );

      final user2 = User(
        id: 2,
        email: 'anna@greeneco.ru',
        name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        phone: '+7 (999) 987-65-43',
        position: 'CTO',
        companyName: 'GreenEco',
        avatarUrl: 'assets/avatar_anna.svg',
        createdAt: DateTime.now().subtract(const Duration(days: 25)),
      );

      final user3 = User(
        id: 3,
        email: 'pavel@eduplatform.ru',
        name: '–ü–∞–≤–µ–ª –ö–æ–∑–ª–æ–≤',
        phone: '+7 (999) 555-44-33',
        position: 'Founder',
        companyName: 'EduPlatform',
        avatarUrl: 'assets/avatar_pavel.svg',
        createdAt: DateTime.now().subtract(const Duration(days: 20)),
      );

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
      final company1 = Company(
        id: 1,
        name: 'TechStart',
        description: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–∏–Ω—Ç–µ—Ö-–∫–æ–º–ø–∞–Ω–∏—è',
        industry: '–§–∏–Ω–∞–Ω—Å—ã',
        location: '–ú–æ—Å–∫–≤–∞',
        logoUrl: 'https://via.placeholder.com/100/4CAF50/FFFFFF?text=TS',
        employeeCount: 50,
        contactEmail: 'info@techstart.ru',
        createdBy: 1,
        createdAt: DateTime.now().subtract(const Duration(days: 30)),
      );

      final company2 = Company(
        id: 2,
        name: 'GreenEco',
        description: '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
        industry: '–≠–∫–æ–ª–æ–≥–∏—è',
        location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        logoUrl: 'https://via.placeholder.com/100/4CAF50/FFFFFF?text=GE',
        employeeCount: 25,
        contactEmail: 'info@greeneco.ru',
        createdBy: 2,
        createdAt: DateTime.now().subtract(const Duration(days: 25)),
      );

      final company3 = Company(
        id: 3,
        name: 'EduPlatform',
        description: '–û–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö',
        industry: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        location: '–ö–∞–∑–∞–Ω—å',
        logoUrl: 'https://via.placeholder.com/100/2196F3/FFFFFF?text=EP',
        employeeCount: 15,
        contactEmail: 'info@eduplatform.ru',
        createdBy: 3,
        createdAt: DateTime.now().subtract(const Duration(days: 20)),
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      await _dbHelper.insertUser(user1);
      await _dbHelper.insertUser(user2);
      await _dbHelper.insertUser(user3);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–ø–∞–Ω–∏–∏
      await _dbHelper.insertCompany(company1);
      await _dbHelper.insertCompany(company2);
      await _dbHelper.insertCompany(company3);

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
      final post1 = Post(
        id: 1,
        userId: 1,
        companyId: 1,
        content: '–ó–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—ã–π —Ñ–∏–Ω—Ç–µ—Ö-–ø—Ä–æ–¥—É–∫—Ç! –ò—â–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–º–æ–∂–µ—Ç –º–∞–ª–æ–º—É –±–∏–∑–Ω–µ—Å—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–§–∏–Ω—Ç–µ—Ö+–ü—Ä–æ–¥—É–∫—Ç',
        likesCount: 24,
        commentsCount: 5,
        createdAt: DateTime.now().subtract(const Duration(hours: 2)),
      );

      final post2 = Post(
        id: 2,
        userId: 2,
        companyId: 2,
        content: '–û—Ç–∫—Ä—ã–ª–∏ –Ω–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–¶–µ–Ω—Ç—Ä+–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏',
        likesCount: 15,
        commentsCount: 3,
        createdAt: DateTime.now().subtract(const Duration(days: 1)),
      );

      final post3 = Post(
        id: 3,
        userId: 3,
        companyId: 3,
        content: '–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ Flutter —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Å—Ç–∞–Ω—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
        imageUrl: 'https://via.placeholder.com/400x300/2196F3/FFFFFF?text=–ö—É—Ä—Å+Flutter',
        likesCount: 32,
        commentsCount: 8,
        createdAt: DateTime.now().subtract(const Duration(days: 3)),
      );

      final post4 = Post(
        id: 4,
        userId: 1,
        companyId: 1,
        content: '–ü—Ä–æ–≤–µ–ª–∏ —É—Å–ø–µ—à–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ FinTech 2024. –ü–æ–ª—É—á–∏–ª–∏ –º–Ω–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤!',
        imageUrl: null,
        likesCount: 18,
        commentsCount: 4,
        createdAt: DateTime.now().subtract(const Duration(hours: 6)),
      );

      final post5 = Post(
        id: 5,
        userId: 2,
        companyId: 2,
        content: '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è–ª–∞ —É—á–∞—Å—Ç–∏–µ –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä—É–º–µ. –û–±—Å—É–¥–∏–ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è –∑–µ–ª–µ–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –†–æ—Å—Å–∏–∏.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–≠–∫–æ+–§–æ—Ä—É–º',
        likesCount: 27,
        commentsCount: 6,
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç—ã
      await _dbHelper.insertPost(post1);
      await _dbHelper.insertPost(post2);
      await _dbHelper.insertPost(post3);
      await _dbHelper.insertPost(post4);
      await _dbHelper.insertPost(post5);

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      final comment1 = Comment(
        id: 1,
        postId: 1,
        userId: 2,
        content: '–û—Ç–ª–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞! –ì–æ—Ç–æ–≤—ã –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É.',
        createdAt: DateTime.now().subtract(const Duration(hours: 1)),
      );

      final comment2 = Comment(
        id: 2,
        postId: 1,
        userId: 3,
        content: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.',
        createdAt: DateTime.now().subtract(const Duration(minutes: 30)),
      );

      final comment3 = Comment(
        id: 3,
        postId: 2,
        userId: 1,
        content: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é! –≠–∫–æ–ª–æ–≥–∏—è - —ç—Ç–æ –≤–∞–∂–Ω–æ.',
        createdAt: DateTime.now().subtract(const Duration(hours: 12)),
      );

      final comment4 = Comment(
        id: 4,
        postId: 3,
        userId: 1,
        content: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—à—É—Å—å –Ω–∞ –∫—É—Ä—Å!',
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
      );

      final comment5 = Comment(
        id: 5,
        postId: 3,
        userId: 2,
        content: '–û—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!',
        createdAt: DateTime.now().subtract(const Duration(days: 2, hours: 2)),
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      await _dbHelper.insertComment(comment1);
      await _dbHelper.insertComment(comment2);
      await _dbHelper.insertComment(comment3);
      await _dbHelper.insertComment(comment4);
      await _dbHelper.insertComment(comment5);

      print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $e');
      rethrow;
    }
  }

  // ==================== –°–ï–†–í–ï–†–ù–´–ï –î–ê–ù–ù–´–ï ====================

  static Future<void> insertTestDataToServer() async {
    try {
      print('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');

      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      final user1Id = await _registerUserOnServer(
        email: 'ivan@techstart.ru',
        password: 'test123',
        name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        phone: '+7 (999) 123-45-67',
        position: 'CEO',
        companyName: 'TechStart',
      );

      final user2Id = await _registerUserOnServer(
        email: 'anna@greeneco.ru',
        password: 'test123',
        name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        phone: '+7 (999) 987-65-43',
        position: 'CTO',
        companyName: 'GreenEco',
      );

      final user3Id = await _registerUserOnServer(
        email: 'pavel@eduplatform.ru',
        password: 'test123',
        name: '–ü–∞–≤–µ–ª –ö–æ–∑–ª–æ–≤',
        phone: '+7 (999) 555-44-33',
        position: 'Founder',
        companyName: 'EduPlatform',
      );

      // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      final company1Id = await _createCompanyOnServer(
        name: 'TechStart',
        description: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–∏–Ω—Ç–µ—Ö-–∫–æ–º–ø–∞–Ω–∏—è',
        industry: '–§–∏–Ω–∞–Ω—Å—ã',
        location: '–ú–æ—Å–∫–≤–∞',
        logoUrl: 'https://via.placeholder.com/100/4CAF50/FFFFFF?text=TS',
        employeeCount: 50,
        contactEmail: 'info@techstart.ru',
        userId: user1Id,
      );

      final company2Id = await _createCompanyOnServer(
        name: 'GreenEco',
        description: '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
        industry: '–≠–∫–æ–ª–æ–≥–∏—è',
        location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        logoUrl: 'https://via.placeholder.com/100/4CAF50/FFFFFF?text=GE',
        employeeCount: 25,
        contactEmail: 'info@greeneco.ru',
        userId: user2Id,
      );

      final company3Id = await _createCompanyOnServer(
        name: 'EduPlatform',
        description: '–û–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö',
        industry: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        location: '–ö–∞–∑–∞–Ω—å',
        logoUrl: 'https://via.placeholder.com/100/2196F3/FFFFFF?text=EP',
        employeeCount: 15,
        contactEmail: 'info@eduplatform.ru',
        userId: user3Id,
      );

      // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      await _createPostOnServer(
        content: '–ó–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—ã–π —Ñ–∏–Ω—Ç–µ—Ö-–ø—Ä–æ–¥—É–∫—Ç! –ò—â–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–º–æ–∂–µ—Ç –º–∞–ª–æ–º—É –±–∏–∑–Ω–µ—Å—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–§–∏–Ω—Ç–µ—Ö+–ü—Ä–æ–¥—É–∫—Ç',
        companyId: company1Id,
        userId: user1Id,
      );

      await _createPostOnServer(
        content: '–û—Ç–∫—Ä—ã–ª–∏ –Ω–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–¶–µ–Ω—Ç—Ä+–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏',
        companyId: company2Id,
        userId: user2Id,
      );

      await _createPostOnServer(
        content: '–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ Flutter —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Å—Ç–∞–Ω—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
        imageUrl: 'https://via.placeholder.com/400x300/2196F3/FFFFFF?text=–ö—É—Ä—Å+Flutter',
        companyId: company3Id,
        userId: user3Id,
      );

      await _createPostOnServer(
        content: '–ü—Ä–æ–≤–µ–ª–∏ —É—Å–ø–µ—à–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ FinTech 2024. –ü–æ–ª—É—á–∏–ª–∏ –º–Ω–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤!',
        imageUrl: null,
        companyId: company1Id,
        userId: user1Id,
      );

      await _createPostOnServer(
        content: '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è–ª–∞ —É—á–∞—Å—Ç–∏–µ –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä—É–º–µ. –û–±—Å—É–¥–∏–ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è –∑–µ–ª–µ–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –†–æ—Å—Å–∏–∏.',
        imageUrl: 'https://via.placeholder.com/400x300/4CAF50/FFFFFF?text=–≠–∫–æ+–§–æ—Ä—É–º',
        companyId: company2Id,
        userId: user2Id,
      );

      print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä: $e');
      rethrow;
    }
  }

  // ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ====================

  static Future<int> _registerUserOnServer({
    required String email,
    required String password,
    required String name,
    required String phone,
    required String position,
    required String companyName,
  }) async {
    try {
      final response = await _dio.post(
        '$_baseUrl/register',
        data: {
          'email': email,
          'password': password,
          'name': name,
          'phone': phone,
          'position': position,
          'company_name': companyName,
        },
      );

      if (response.statusCode == 200) {
        return response.data['user_id'];
      }
    } catch (e) {
      print('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $email: $e');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π ID –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
      return 1;
    }
    return 1;
  }

  static Future<int> _createCompanyOnServer({
    required String name,
    required String description,
    required String industry,
    required String location,
    String? logoUrl,
    required int employeeCount,
    required String contactEmail,
    required int userId,
  }) async {
    try {
      final response = await _dio.post(
        '$_baseUrl/companies',
        data: {
          'name': name,
          'description': description,
          'industry': industry,
          'location': location,
          'logo_url': logoUrl,
          'employee_count': employeeCount,
          'contact_email': contactEmail,
        },
        queryParameters: {'user_id': userId},
      );

      if (response.statusCode == 200) {
        return response.data['company_id'];
      }
    } catch (e) {
      print('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ $name: $e');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π ID –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
      return 1;
    }
    return 1;
  }

  static Future<void> _createPostOnServer({
    required String content,
    String? imageUrl,
    required int companyId,
    required int userId,
  }) async {
    try {
      await _dio.post(
        '$_baseUrl/posts',
        data: {
          'content': content,
          'company_id': companyId,
          'image_url': imageUrl,
        },
        queryParameters: {'user_id': userId},
      );
    } catch (e) {
      print('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: $e');
    }
  }

  static Future<void> clearTestData() async {
    try {
      await _dbHelper.deleteDatabase();
      print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $e');
      rethrow;
    }
  }
} 